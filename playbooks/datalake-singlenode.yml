---
- name: Install a single node cluster datalake
  hosts: localhost

  tasks:
    - name: install snap package
      apt:
        pkg: snap
      become: yes

    - name: install microk8s
      community.general.snap:
        name: microk8s
        classic: yes
      become: yes

    - name: add user to microk8s group
      ansible.builtin.user:
        name: "{{ lookup('env','USER') }}"
        append: true
        groups: microk8s
      become: yes

    - name: install helm
      community.general.snap:
        name: helm
        classic: yes
      become: yes

    - name: Check if helm completion exists
      stat:
        path: /etc/bash_completion.d/helm
      register: helm_completion

    - name: setup kube config
      ansible.builtin.shell: "helm completion bash > /etc/bash_completion.d/helm"
      become: yes
      when: not helm_completion.stat.exists

    - name: add  helm repositories
      kubernetes.core.helm_repository:
        name:  "{{ item.name }}"
        repo_url: "{{ item.repo_url }}"
      with_items:
        - name: apache-airflow
          repo_url: https://airflow.apache.org
        - name: trino
          repo_url: https://trinodb.github.io/charts
        - name:  bitnami
          repo_url: https://charts.bitnami.com/bitnami
        - name: minio-operator
          repo_url: https://operator.min.io
        - name: gitea-charts
          repo_url: https://dl.gitea.com/charts/
        - name: harbor
          repo_url: https://helm.goharbor.io
      
    - name: Check if kube config exists
      stat:
        path: "{{ lookup('env','HOME') }}/.kube/config"
      register: kube_config

    - name: setup kube config
      ansible.builtin.shell: "mkdir {{ lookup('env','HOME') }}/.kube && microk8s.config > {{ lookup('env','HOME') }}/.kube/config"
      when: not kube_config.stat.exists

    - name: install kubectl
      community.general.snap:
        name: kubectl
        classic: yes
      become: yes

    - name: Check if kubectl completion exists
      stat:
        path: /etc/bash_completion.d/kubectl
      register: kubectl_completion

    - name: setup kube config
      ansible.builtin.shell: "kubectl completion bash > /etc/bash_completion.d/kubectl"
      become: yes
      when: not kubectl_completion.stat.exists

    - name: install pip package
      apt:
        pkg: python3-kubernetes
      become: yes

    - name: check ingress status
      shell: microk8s status -a ingress
      register: microk8s_ingress
      changed_when: false
      
    - name: enable ingress
      shell: microk8s enable ingress
      when: microk8s_ingress.stdout == "disabled"

    - name: Create the datalake namespace
      kubernetes.core.k8s:
        name: datalake
        api_version: v1
        kind: Namespace
        state: present
    
    - name: Deploy gitea 10.4.0
      kubernetes.core.helm:
        name: gitea
        chart_ref: gitea-charts/gitea
        chart_version: 10.4.0
        release_namespace: datalake
        values_files:
          - ../files/gitea_values.yml
    
    - name: Deploy harbor 1.15.1
      kubernetes.core.helm:
        name: harbor
        chart_ref: harbor/harbor
        chart_version: 1.15.1
        release_namespace: datalake
        values_files:
          - ../files/harbor_values.yml

    - name: Deploy trino 0.28.0
      kubernetes.core.helm:
        name: trino
        chart_ref: trino/trino
        chart_version: 0.28.0
        release_namespace: datalake
        values_files:
          - ../files/trino_values.yml
